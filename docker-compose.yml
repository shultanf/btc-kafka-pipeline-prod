version: '3.8'

volumes:
  kafka-data:
  kafka-services-logs:

services:
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"  # Client connections
      - "9093:9093"  # Controller connections
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 5s
      timeout: 10s
      retries: 10
    environment:
      # KRaft Mode Essentials
      KAFKA_KRAFT_ENABLED: "true"
      KAFKA_NODE_ID: "1"
      CLUSTER_ID: ${CLUSTER_ID}
      # Networking
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${HOST}:${PORT}
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      # Cluster Config
      KAFKA_PROCESS_ROLES: "controller,broker"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"  # Format: node_id@host:port
      # Topic Management
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: "1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"

      KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M"
    volumes:
      - kafka-data:/var/lib/kafka/data

  consumer:
    build: .
    command: sh -c "wait-broker.sh && python src/s3_client.py && python src/consumer.py"
    volumes:
      - ./.env:/app/.env
      - kafka-services-logs:/app/logs
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      PYTHONUNBUFFERED: "1"
    logging:
      driver: "json-file"
